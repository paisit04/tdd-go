// Code generated by mockery v2.43.1. DO NOT EDIT.

package mocks

import (
	db "book-swap/db"

	mock "github.com/stretchr/testify/mock"
)

// BookOperationsService is an autogenerated mock type for the BookOperationsService type
type BookOperationsService struct {
	mock.Mock
}

// ListByUser provides a mock function with given fields: userID
func (_m *BookOperationsService) ListByUser(userID string) []db.Book {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for ListByUser")
	}

	var r0 []db.Book
	if rf, ok := ret.Get(0).(func(string) []db.Book); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]db.Book)
		}
	}

	return r0
}

// NewBookOperationsService creates a new instance of BookOperationsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBookOperationsService(t interface {
	mock.TestingT
	Cleanup(func())
}) *BookOperationsService {
	mock := &BookOperationsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
